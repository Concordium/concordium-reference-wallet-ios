default_platform(:ios)

# Variables:
$scheme = ENV['SCHEME']
$test_scheme = "Mock"
$test_devices = ['iPhone 13 Pro']
$slack_url = ENV['slack_url']
$slack_channel = ENV['SLACK_CHANNEL']
$password = ENV['FASTLANE_PASSWORD']

platform :ios do
  desc 'Build, Archive, and Upload to ASC'
  lane :release do
    app_identifier = ENV["APP_IDENTIFIER"]
    project = $project
    setup_ci if ENV['CI']

    app_store_connect_api_key(
      key_id: ENV["APPLE_KEY_ID"],
      issuer_id: ENV['APPLE_KEY_ISSUER'],
      in_house: false,
      key_content: ENV['APPLE_API_KEY'],
      is_key_content_base64: true
    )
    match
    scan(
      project: $project,
      devices: $test_devices,
      code_coverage: true,
      scheme: $test_scheme,
      slack_url: $slack_url,
      slack_channel: $slack_channel,
    )

    upload_build
    increment_build_number({
      build_number: latest_testflight_build_number(app_identifier: ENV["APP_IDENTIFIER"]),
      skip_info_plist: true
    })
    clean_build_artifacts()
  end

  desc "Export accept to TestFlight"
  lane :upload_build do
	begin
    gym(
      project: $project,
      scheme: $scheme,
    )
    upload_to_testflight(skip_waiting_for_build_processing: true)

    rescue => exception
		  on_error("Upload to TestFlight failed: #{exception}")
		  UI.user_error! "Exporting Concordium Mobile Wallet to TestFlight has failed. "
      raise exception
  end
    on_success("Mobile Wallet - #{$version_number} (#{$build_number}) has been successfully uploaded to TestFlight.")
  end

  def on_success(message)
    begin
        teams(
            title: "Success!  ✅",
            message: message,
            facts:[],
            teams_url: $teamsUrl
        )
    rescue
        puts 'Oops, something went wrong. Teams returns exception'
    end
  end

  def on_error(message)
    begin
      slack(
      slack_url: $slack_url,
      message: "Sorry! Unfortunately your CI build has failed! 🙁",
      channel: $slack_channel, 
      success: false,
      payload: { "Build Date" => Time.new.to_s },
      default_payloads: [:git_branch, :lane, :test_result, :last_git_commit, :last_git_commit_hash],
    )
  rescue
    puts 'Oops, something went wrong. Teams returns exception'
    end
  end
end
