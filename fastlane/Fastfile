default_platform(:ios)

platform :ios do
  desc 'Run unit tests'
  lane :test do
    app_identifier = ENV["APP_IDENTIFIER"]
    project = $project
    setup_ci if ENV['CI']

    scan(
      project: $project,
      devices: ['iPhone 13 Pro'],
      code_coverage: true,
      scheme: "Mock",
      slack_url: ENV['slack_url'],
      slack_channel: ENV['SLACK_CHANNEL']
    )
  end

  desc 'Build, Archive, and Upload to ASC'
  lane :release do
    app_identifier = ENV["APP_IDENTIFIER"]
    project = $project
    setup_ci if ENV['CI']
    upload_build
  end

  desc "Export accept to TestFlight"
  lane :upload_build do
    begin
      match
      app_store_connect_api_key(
        key_id: ENV["APPLE_KEY_ID"],
        issuer_id: ENV['APPLE_KEY_ISSUER'],
        in_house: false,
        key_content: ENV['APPLE_API_KEY'],
        is_key_content_base64: true
      )
      increment_build_number(
        build_number: [
          latest_testflight_build_number(app_identifier: ENV["APP_IDENTIFIER"])+1,
          get_build_number
        ].max,
        skip_info_plist: true
      )
      gym(
        project: $project,
        scheme: ENV["SCHEME"]
      )
      upload_to_testflight(skip_waiting_for_build_processing: true)
    rescue => exception
      on_error("Upload to TestFlight failed: #{exception}")
      UI.user_error! "Exporting Concordium Mobile Wallet to TestFlight has failed. "
      raise exception
    end
    on_success("Mobile Wallet - #{$version_number} (#{$build_number}) has been successfully uploaded to TestFlight.")
  end

  def on_success(message)
    begin
      slack(
        slack_url: ENV['slack_url'],
        channel: ENV['slack_channel'],
        title: "Success!  ✅",
        message: message,
        facts:[],
        teams_url: $teamsUrl
      )
    rescue
      puts 'Oops, something went wrong. Teams returns exception'
    end
  end

  def on_error(message)
    begin
      slack(
        slack_url: ENV['slack_url'],
        message: "Sorry! Unfortunately your CI build has failed! 🙁",
        channel: ENV['slack_channel'],
        success: false,
        payload: { "Build Date" => Time.new.to_s },
        default_payloads: [:git_branch, :lane, :test_result, :last_git_commit, :last_git_commit_hash]
      )
    rescue
      puts 'Oops, something went wrong. Teams returns exception'
    end
  end
end
